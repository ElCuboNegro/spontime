name: CD Pipeline

on:
  push:
    branches:
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop

jobs:
  deploy-and-stress-test:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}

      # Paso 2.1: Login Google Cloud SDK

      - name: Google Cloud Login
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Paso 2.2: Setup Google Cloud SDK
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2        

      # Paso 3: Configurar Docker para Artifact Registry
      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      # Paso 4: Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }} .

      # Paso 5: Push de la imagen a Artifact Registry
      - name: Push Docker image
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }}

      # Paso 6: Desplegar en Cloud Run (Ambiente de Pruebas)
      - name: Deploy to Cloud Run (Testing Environment)
        run: |
          REGION=us-central1
          SERVICE=latam-ml-challenge-pr${{ github.event.pull_request.number }}

          gcloud run deploy $SERVICE \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated

      # Paso 7: Obtener la URL del servicio desplegado
      - name: Get Service URL
        id: get-url
        run: |
          REGION=us-central1
          SERVICE=latam-ml-challenge-pr${{ github.event.pull_request.number }}
          SERVICE_URL=$(gcloud run services describe $SERVICE --region $REGION --format 'value(status.url)')
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

      # Paso 8: Instalar dependencias para stress testing
      - name: Install dependencies for stress testing
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install locust

      # Paso 9: Ejecutar Stress Tests
      - name: Run Stress Tests
        env:
          SERVICE_URL: ${{ env.SERVICE_URL }}
        run: |
          echo "Running stress tests against $SERVICE_URL"
          locust -f tests/stress/api_stress.py --headless -u 100 -r 10 -t 10m --host=$SERVICE_URL --exit-code-on-error

      # Paso 9.1: Guardar reportes de stress tests
      - name: Upload Stress Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: stress-test-reports
          path: reports/

      # Paso 11: Configurar nombre del servicio
      - name: Configurar nombre del servicio
        id: vars
        run: echo "SERVICE_NAME=latam-ml-challenge-${{ github.event.pull_request.number || 'main' }}" >> $GITHUB_ENV
